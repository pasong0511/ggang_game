.game_app {
    position: relative;
    height: 100vh;
    min-width: 1280px;
}
.game_app {
    position: relative;
    height: 100vh;
    overflow: hidden; /*배경 스크롤 가림*/
}
.game_app .game {
    position: absolute;
    left: 0;
    bottom: 0;
    z-index: 10;
    width: 70000px;
    height: 100%;
    background-image: url("../images/bg_bottom.png");
    background-repeat: repeat-x;
    background-size: auto 100%;
    will-change: transform; /*transform을 사용하는 css 속성에 값이 변경될 속성에 대한 힌트를 미리 지정*/
}

.game_app .sky {
    position: absolute;
    left: 0;
    bottom: 0;
    z-index: 1;
    width: 70000px;
    height: 100%;
    background-image: url("../images/bg_top.png");
    background-repeat: repeat-x;
    background-size: auto 100%;
    will-change: transform;
}

/* 가만히 있는 모션 */
@keyframes hero_idle {
    from {
        background-position-x: 0px; /*0픽셀부터 시작*/
    }
    to {
        background-position-x: -1498px; /*<- 방향으로 이동*/
    }
}

/*달리는 모션*/
@keyframes hero_run {
    from {
        background-position-x: 0px; /*0픽셀부터 시작*/
    }
    to {
        background-position-x: -1498px; /*<- 방향으로 이동*/
    }
}

/*공격하는 모션*/
@keyframes hero_attack {
    from {
        background-position-x: 0px; /*0픽셀부터 시작*/
    }
    to {
        background-position-x: -1498px; /*<- 방향으로 이동*/
    }
}

.hero_box {
    position: fixed;
    left: 0;
    bottom: 0; /*왼쪽 아래로 고정*/
    z-index: 100;
    width: 150px;
    height: 182px;
    will-change: transform; /*transform을 사용하는 css 속성에 값이 변경될 속성에 대한 힌트를 미리 지정*/
}

.hero_box .hero {
    height: 100%;
    background-image: url("../images/ninja_idle.png");
    background-size: 1498px 182px; /*닌자 캐릭터 이미지 전체 프레임의 크기*/

    /*애니메이션 듀레이션 0.7초 동안, steps(10) 열번 움직여라, */
    /*열번 움직이는 기준은 0px 부터 -3770만큼 움직인 기준*/
    /*-3770 / 10 = -377px 이 원스텝이 되어 움직임 : 즉 0.7마다 -377px 만큼 움직인다.*/
    animation: hero_idle 0.7s infinite steps(10); /*키프레임을 애니메이션에 추가한다 히어로가 10컷*/
}

/* 오른쪽, 왼쪽 방향 전환을 위해서 flip 클래스에 방향 전환 */
.hero_box .hero.flip {
    transform: rotateY(180deg);
}

.hero_box .hero.run,
.hero_box .hero.run.attack {
    /*달리면서 공격했을 때, 달리는 모션*/
    height: 100%;
    background-image: url("../images/ninja_run.png");
    background-size: 1498px 182px;
    animation: hero_run 0.7s infinite steps(10);
}

.hero_box .hero.attack {
    height: 100%;
    background-image: url("../images/ninja_attack.png");
    background-size: 1498px 182px;
    animation: hero_attack 0.7s 1 steps(10); /*공격을 1회만 반복*/
}

.hero_bullet {
    position: absolute;
    left: 0;
    bottom: 0;
    z-index: 90;
    width: 120px;
    height: 24px;
    background-image: url("../images/hero_bullet.png");
    background-size: cover;
    background-repeat: no-repeat;
    will-change: transform; /*transform을 사용하는 css 속성에 값이 변경될 속성에 대한 힌트를 미리 지정*/
}

@keyframes monster_run {
    from {
        background-position-x: 0px; /*0픽셀부터 시작*/
    }
    to {
        background-position-x: -2242px; /*<- 방향으로 이동(0부터 이미지 끝까지0*/
    }
}

.monster_box {
    position: absolute;
    left: 700px;
    bottom: 0px;
    z-index: 90;
    width: 280px;
    height: 294px;
    will-change: transform;
}

.monster_box.remove {
    opacity: 0;
    transition: opacity 0.2s;
}

.monster_box .monster {
    height: 100%;
    background-image: url("../images/monster/monster_green_run.png");
    background-size: 2242px 294px;
    /*전체 몬스터 이미지는 2242px 이었고, 이걸 8만큼 쪼개서 보여줌이라고 생각하자
    * 이게 프레임 수가 안맞게 보이면 움직임이 이상하게 보인다.
    */
    animation: monster_run 1s infinite steps(8); /*몬스터가 8컷이므로 8*/
}

.monster_box .hp {
    position: absolute;
    left: 0;
    top: 0;
    width: 100%;
    height: 10px;
    border: 2px solid #000;
    transform: translateY(-100%);
}

.monster_box .hp span {
    display: block;
    width: 100%;
    height: 100%;
    background: red;
    transition: width 0.3s linear; /*몬스터 피 깎임 부드럽게 처리*/
}
